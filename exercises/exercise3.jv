pipeline FreightTransportationPipeline {



    FreightExtractor -> FreightTextFileInterpreter;

    FreightTextFileInterpreter
        -> FreightCSVInterpreter
        -> FreightCoreDataSelector
        -> NameHeaderWriter
        -> NameHeaderWriter2
        -> FreightTableInterpreter

        -> FreightLoader;

    block FreightExtractor oftype HttpExtractor {
        url: "https://www-genesis.destatis.de/genesis/downloads/00/tables/46131-0014_00.csv";
    }
	block FreightTextFileInterpreter oftype TextFileInterpreter { encoding : 'latin2'; }
    block FreightCSVInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }
    block FreightCoreDataSelector oftype CellRangeSelector {
        select : range A8:AU41336; 
    }
    block NameHeaderWriter oftype CellWriter {
        at: range A1:E1;
        write: [ "year", "month", "goods_id", "goods_name", "goods_source"];
    }

    block NameHeaderWriter2 oftype CellWriter {
        at: range AT1:AU1;
        write: [ "abroad", "total"];
    }
    block FreightTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "year" oftype text,
            "month" oftype MonthType,
            "goods_id" oftype GoodsIDType,
            "goods_name" oftype text,
            "goods_source" oftype text, 
            "abroad" oftype NumericType,
            "total" oftype NumericType
        ];
    }

    block FreightLoader oftype SQLiteLoader {
        table: "goods";
        file: "./goodsTransportedByTrain.sqlite";
    }
}

valuetype MonthType oftype text {
    constraints: [
        MonthConstraint,
    ];
}

constraint MonthConstraint oftype AllowlistConstraint {
    allowlist: ["Januar", "Februar", "MÃ¤rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"];
}

valuetype GoodsIDType oftype text {
    constraints: [
         GoodsIDConstraint,
    ];
}
constraint GoodsIDConstraint oftype RegexConstraint {
   regex: /^NST7-/;
 }
valuetype NumericType oftype text {
    constraints: [
         NumericConstraint,
    ];
}

constraint NumericConstraint oftype RangeConstraint {
   lowerBound: 0;
 }
