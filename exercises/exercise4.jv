

pipeline BatteryDataPipeline {

        BatteryHttpExract
        -> BatteryExtractZipFile
        -> BatteryFilePicker
        -> BatteryReadTextFile
        -> BatteryCSV
        -> BatteryRangeSelector
        -> BatteryColumnDeleter
        -> BatteryHeaderWriter
        -> BatteryTableInterpreter
        -> ConvertTemp
        -> ConvertBatteryTemp
        -> LoadDataToDatabase;


    block BatteryHttpExract oftype HttpExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    block BatteryExtractZipFile oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block BatteryFilePicker oftype FilePicker {
        path: "/data.csv";
    }

    block BatteryReadTextFile oftype TextFileInterpreter {}


    block BatteryCSV oftype CSVInterpreter { 
        delimiter: ';';
    }

    block BatteryRangeSelector oftype CellRangeSelector {
   
        select: range A1:J*;
    }

    block BatteryColumnDeleter oftype ColumnDeleter {
        delete: [column F, column G, column H, column I];
    }

    block BatteryHeaderWriter oftype CellWriter {
        at: range A1:F1;
        write: [ "id", "producer", "model", "month", "temperature", "battery_temperature"];
    }
    block BatteryTableInterpreter oftype TableInterpreter {
         // Only use the columns "Geraet", "Hersteller", "Model", "Monat", "Temperatur in °C (DWD)", "Batterietemperatur in °C"
        header: true;
        columns: [
            "id" oftype IDType,
            "producer" oftype text,
            "model" oftype text,
            "month" oftype integer,
            "temperature" oftype decimal,
            "battery_temperature" oftype decimal,
        ];
    }

    block ConvertTemp oftype TableTransformer {
        inputColumns: ["temperature"];
        outputColumn: "temperature";
        use: ConvertCelsiusToFahrenheit;
    }

    block ConvertBatteryTemp oftype TableTransformer {
        inputColumns: ["battery_temperature"];
        outputColumn: "battery_temperature";
        use: ConvertCelsiusToFahrenheit;
    }

    block LoadDataToDatabase oftype SQLiteLoader {
        table: "temperatures"; 
        file: "./temperatures.sqlite";
    }

} 

transform ConvertCelsiusToFahrenheit {
  from temperatureInCelsius oftype decimal;
  to temperatureInFahrenheit oftype decimal;

  temperatureInFahrenheit: (temperatureInCelsius * 9/5) + 32;
}


constraint IDConstraint oftype RangeConstraint {
    lowerBound: 0;
}

valuetype IDType oftype integer {
    constraints: [IDConstraint];
}

